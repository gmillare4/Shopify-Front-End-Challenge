{"version":3,"sources":["components/nominations.js","components/searchbar.js","components/searchresults.js","App.js","index.js"],"names":["Nominations","props","Card","className","CardBody","nominations","map","result","index","Title","Year","Button","outline","color","size","value","imdbID","onClick","remove","SearchBar","errorMsg","formInput","apiError","Input","type","searchParam","onChange","handleChange","placeholder","invalid","FormFeedback","Form","onSubmit","search","FormGroup","SearchResults","loadingAnim","loading","Spinner","paginationArr","paginationNum","Math","ceil","totalResults","i","push","resultsFor","searchResults","nominate","Pagination","page","PaginationItem","PaginationLink","setPage","href","App","event","setState","target","state","banner","currPage","bind","console","log","preventDefault","this","fetch","then","res","ok","json","Error","Response","Number","Search","catch","err","canNominate","j","length","newNominations","filter","nomination","pageNum","prevProps","prevState","CardGroup","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1fddcd7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Button } from \"reactstrap\";\r\n\r\nconst Nominations = (props) => {\r\n  return (\r\n    <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n      <CardBody>\r\n        <h5>Nominations</h5>\r\n        <ul>\r\n          {props.nominations.map((result, index) => {\r\n            return (\r\n              <li key={index}>\r\n                {result.Title} ({result.Year}){\" \"}\r\n                <Button\r\n                  outline\r\n                  color=\"danger\"\r\n                  size=\"sm\"\r\n                  value={result.imdbID}\r\n                  onClick={props.remove}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default Nominations;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nconst SearchBar = (props) => {\r\n  let errorMsg;\r\n  let formInput;\r\n  if (props.apiError) {\r\n    formInput = (\r\n      <Input\r\n        type=\"text\"\r\n        value={props.searchParam}\r\n        onChange={props.handleChange}\r\n        placeholder=\"Search\"\r\n        invalid\r\n      />\r\n    );\r\n    errorMsg = <FormFeedback>{props.apiError}</FormFeedback>;\r\n  } else {\r\n    formInput = (\r\n      <Input\r\n        type=\"text\"\r\n        value={props.searchParam}\r\n        onChange={props.handleChange}\r\n        placeholder=\"Search\"\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n      <CardBody>\r\n        <h5>Movie Title</h5>\r\n        <Form onSubmit={props.search}>\r\n          <FormGroup>\r\n            {formInput}\r\n            {errorMsg}\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Spinner,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\n\r\nconst SearchResults = (props) => {\r\n  let loadingAnim;\r\n  if (props.loading) {\r\n    loadingAnim = (\r\n      <div>\r\n        <Spinner color=\"primary\" />\r\n        {\"  \"}\r\n        <Spinner color=\"success\" />\r\n        {\"  \"}\r\n        <Spinner color=\"danger\" />\r\n      </div>\r\n    );\r\n  }\r\n  let paginationArr = [];\r\n  let paginationNum = Math.ceil(props.totalResults / 10);\r\n  if (paginationNum !== 1) {\r\n    for (let i = 1; i < paginationNum + 1; i++) {\r\n      paginationArr.push(i);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n      <CardBody>\r\n        <h5>Results for \"{props.resultsFor}\"</h5>\r\n        {loadingAnim}\r\n        <ul>\r\n          {props.searchResults.map((result, index) => {\r\n            return (\r\n              <li key={index}>\r\n                {result.Title} ({result.Year}){\" \"}\r\n                <Button\r\n                  outline\r\n                  color=\"success\"\r\n                  size=\"sm\"\r\n                  value={result.imdbID}\r\n                  onClick={props.nominate}\r\n                >\r\n                  Nominate\r\n                </Button>\r\n              </li>\r\n            );\r\n          })}\r\n          <Pagination>\r\n            {paginationArr.map((page) => {\r\n              return (\r\n                <PaginationItem>\r\n                  <PaginationLink onClick={props.setPage(page)} href=\"#\">\r\n                    {page}\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              );\r\n            })}\r\n          </Pagination>\r\n        </ul>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./App.css\";\r\nimport { Nominations, SearchBar, SearchResults } from \"./components\";\r\nimport { CardGroup } from \"reactstrap\";\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchParam: \"\",\r\n      searchResults: [],\r\n      nominations: [],\r\n      banner: false,\r\n      resultsFor: \"\",\r\n      apiError: false,\r\n      loading: false,\r\n      totalResults: 0,\r\n      currPage: 1,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.nominate = this.nominate.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"attempt 5\");\r\n  }\r\n\r\n  search(event) {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    fetch(\r\n      `https://www.omdbapi.com/?s=${this.state.searchParam}&page=${this.state.currPage}&apikey=807abc94`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res.Response === \"True\") {\r\n          this.setState({ apiError: false });\r\n          this.setState({ loading: false });\r\n          this.setState({ totalResults: Number(res.totalResults) });\r\n          this.setState({ searchResults: res.Search });\r\n        } else {\r\n          this.setState({ apiError: res.Error });\r\n          this.setState({ loading: false });\r\n          this.setState({ totalResults: 0 });\r\n          this.setState({ searchResults: [] });\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"error\", err));\r\n    this.setState({ resultsFor: this.state.searchParam });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ searchParam: event.target.value });\r\n  };\r\n\r\n  nominate(event) {\r\n    let canNominate = true;\r\n    for (let j = 0; j < this.state.nominations.length; j++) {\r\n      if (this.state.nominations[j].imdbID === event.target.value) {\r\n        canNominate = false;\r\n      }\r\n    }\r\n    if (this.state.nominations.length === 5) {\r\n      canNominate = false;\r\n    }\r\n    if (canNominate) {\r\n      for (let i = 0; i < this.state.searchResults.length; i++) {\r\n        if (this.state.searchResults[i].imdbID === event.target.value) {\r\n          this.setState({\r\n            nominations: [\r\n              ...this.state.nominations,\r\n              this.state.searchResults[i],\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  remove(event) {\r\n    let newNominations = this.state.nominations.filter(\r\n      (nomination) => nomination.imdbID !== event.target.value\r\n    );\r\n    this.setState({\r\n      nominations: newNominations,\r\n    });\r\n  }\r\n\r\n  setPage(pageNum) {\r\n    // this.setState({ currPage: pageNum });\r\n    console.log(\"setpage func\");\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.nominations !== prevState.nominations) {\r\n      if (this.state.nominations.length === 5) {\r\n        this.setState({ banner: true });\r\n      } else {\r\n        this.setState({ banner: false });\r\n      }\r\n    }\r\n    if (this.state.currPage !== prevState.currPage) {\r\n      console.log(\"currPages\", this.state.currPage);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let banner;\r\n    if (this.state.banner) {\r\n      banner = (\r\n        <h4 className=\"banner center\">\r\n          You've successfully nominated 5 movies!\r\n        </h4>\r\n      );\r\n    } else {\r\n      banner = <h4 className=\"noBanner text center\">No Banner</h4>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        {banner}\r\n        <h1 className=\"center\">The Shoppies</h1>\r\n        <SearchBar\r\n          search={this.search}\r\n          searchParam={this.state.searchParam}\r\n          handleChange={this.handleChange}\r\n          apiError={this.state.apiError}\r\n        />\r\n        <CardGroup>\r\n          <SearchResults\r\n            searchResults={this.state.searchResults}\r\n            nominate={this.nominate}\r\n            resultsFor={this.state.resultsFor}\r\n            loading={this.state.loading}\r\n            totalResults={this.state.totalResults}\r\n            setPage={this.setPage}\r\n          />\r\n          <Nominations\r\n            nominations={this.state.nominations}\r\n            remove={this.remove}\r\n          />\r\n        </CardGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}