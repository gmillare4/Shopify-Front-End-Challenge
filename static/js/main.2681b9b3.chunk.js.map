{"version":3,"sources":["components/nominations.js","components/searchbar.js","components/searchresults.js","App.js","index.js"],"names":["Nominations","props","Card","className","CardBody","nominations","map","result","index","Title","Year","Button","outline","color","size","value","imdbID","onClick","remove","SearchBar","errorMsg","formInput","apiError","Input","type","searchParam","onChange","handleChange","placeholder","invalid","FormFeedback","Form","onSubmit","search","FormGroup","SearchResults","loading","resultsFor","Spinner","searchResults","nominate","App","event","setState","target","state","banner","bind","preventDefault","console","log","this","fetch","then","res","ok","json","Error","Response","Search","catch","err","canNominate","j","length","i","newNominations","filter","nomination","prevProps","prevState","CardGroup","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2681b9b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Button } from \"reactstrap\";\r\n\r\nconst Nominations = (props) => {\r\n  return (\r\n    <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n      <CardBody>\r\n        <h5>Nominations</h5>\r\n        <ul>\r\n          {props.nominations.map((result, index) => {\r\n            return (\r\n              <li key={index}>\r\n                {result.Title} ({result.Year}){\" \"}\r\n                <Button\r\n                  outline\r\n                  color=\"danger\"\r\n                  size=\"sm\"\r\n                  value={result.imdbID}\r\n                  onClick={props.remove}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default Nominations;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nconst SearchBar = (props) => {\r\n  let errorMsg;\r\n  let formInput;\r\n  if (props.apiError) {\r\n    formInput = (\r\n      <Input\r\n        type=\"text\"\r\n        value={props.searchParam}\r\n        onChange={props.handleChange}\r\n        placeholder=\"Search\"\r\n        invalid\r\n      />\r\n    );\r\n    errorMsg = <FormFeedback>{props.apiError}</FormFeedback>;\r\n  } else {\r\n    formInput = (\r\n      <Input\r\n        type=\"text\"\r\n        value={props.searchParam}\r\n        onChange={props.handleChange}\r\n        placeholder=\"Search\"\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n      <CardBody>\r\n        <h5>Movie Title</h5>\r\n        <Form onSubmit={props.search}>\r\n          <FormGroup>\r\n            {formInput}\r\n            {errorMsg}\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { Card, CardBody, Button, Spinner } from \"reactstrap\";\r\n\r\nconst SearchResults = (props) => {\r\n  if (props.loading) {\r\n    return (\r\n      <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n        <CardBody>\r\n          <h5>Results for \"{props.resultsFor}\"</h5>\r\n          <Spinner color=\"primary\" />\r\n          <Spinner color=\"success\" />\r\n          <Spinner color=\"danger\" />\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <Card className=\"card shadow p-3 mb-5 bg-white rounded\">\r\n        <CardBody>\r\n          <h5>Results for \"{props.resultsFor}\"</h5>\r\n          <ul>\r\n            {props.searchResults.map((result, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  {result.Title} ({result.Year}){\" \"}\r\n                  <Button\r\n                    outline\r\n                    color=\"success\"\r\n                    size=\"sm\"\r\n                    value={result.imdbID}\r\n                    onClick={props.nominate}\r\n                  >\r\n                    Nominate\r\n                  </Button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n};\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./App.css\";\r\nimport { Nominations, SearchBar, SearchResults } from \"./components\";\r\nimport { CardGroup } from \"reactstrap\";\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchParam: \"\",\r\n      searchResults: [],\r\n      nominations: [],\r\n      banner: false,\r\n      resultsFor: \"\",\r\n      apiError: false,\r\n      loading: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.nominate = this.nominate.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  search(event) {\r\n    event.preventDefault();\r\n    console.log(\"loading\", this.state.loading);\r\n    this.setState({ loading: true });\r\n    fetch(\r\n      `https://www.omdbapi.com/?s=${this.state.searchParam}&apikey=807abc94`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res.Response === \"True\") {\r\n          this.setState({ apiError: false });\r\n          this.setState({ loading: false });\r\n          this.setState({ searchResults: res.Search });\r\n        } else {\r\n          this.setState({ apiError: res.Error });\r\n          this.setState({ loading: false });\r\n          this.setState({ searchResults: [] });\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"error\", err));\r\n    this.setState({ resultsFor: this.state.searchParam });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ searchParam: event.target.value });\r\n  };\r\n\r\n  nominate(event) {\r\n    let canNominate = true;\r\n    for (let j = 0; j < this.state.nominations.length; j++) {\r\n      if (this.state.nominations[j].imdbID === event.target.value) {\r\n        canNominate = false;\r\n      }\r\n    }\r\n    if (this.state.nominations.length === 5) {\r\n      canNominate = false;\r\n    }\r\n    if (canNominate) {\r\n      for (let i = 0; i < this.state.searchResults.length; i++) {\r\n        if (this.state.searchResults[i].imdbID === event.target.value) {\r\n          this.setState({\r\n            nominations: [\r\n              ...this.state.nominations,\r\n              this.state.searchResults[i],\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  remove(event) {\r\n    let newNominations = this.state.nominations.filter(\r\n      (nomination) => nomination.imdbID !== event.target.value\r\n    );\r\n    this.setState({\r\n      nominations: newNominations,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.nominations !== prevState.nominations) {\r\n      if (this.state.nominations.length === 5) {\r\n        this.setState({ banner: true });\r\n      } else {\r\n        this.setState({ banner: false });\r\n      }\r\n    }\r\n    if (this.state.loading !== prevState.loading) {\r\n      console.log(\"ha loading\", this.state.loading);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let banner;\r\n    if (this.state.banner) {\r\n      banner = (\r\n        <h4 className=\"banner center\">\r\n          You've successfully nominated 5 movies!\r\n        </h4>\r\n      );\r\n    } else {\r\n      banner = <h4 className=\"noBanner text center\">No Banner</h4>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        {banner}\r\n        <h1 className=\"center\">The Shoppies</h1>\r\n        <SearchBar\r\n          search={this.search}\r\n          searchParam={this.state.searchParam}\r\n          handleChange={this.handleChange}\r\n          apiError={this.state.apiError}\r\n        />\r\n        <CardGroup>\r\n          <SearchResults\r\n            searchResults={this.state.searchResults}\r\n            nominate={this.nominate}\r\n            resultsFor={this.state.resultsFor}\r\n            loading={this.state.loading}\r\n          />\r\n          <Nominations\r\n            nominations={this.state.nominations}\r\n            remove={this.remove}\r\n          />\r\n        </CardGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}